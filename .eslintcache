[{"/home/jyotirmaya/Projects/firebase-auth/src/index.js":"1","/home/jyotirmaya/Projects/firebase-auth/src/serviceWorker.js":"2","/home/jyotirmaya/Projects/firebase-auth/src/App.js":"3","/home/jyotirmaya/Projects/firebase-auth/src/app/store.js":"4","/home/jyotirmaya/Projects/firebase-auth/src/features/counter/Counter.js":"5","/home/jyotirmaya/Projects/firebase-auth/src/features/counter/counterSlice.js":"6","/home/jyotirmaya/Projects/firebase-auth/src/features/auth/authSlice.js":"7","/home/jyotirmaya/Projects/firebase-auth/src/features/dash/Dashboard.js":"8","/home/jyotirmaya/Projects/firebase-auth/src/features/auth/login/Login.js":"9","/home/jyotirmaya/Projects/firebase-auth/src/features/auth/signup/Signup.js":"10","/home/jyotirmaya/Projects/firebase-auth/src/app/firebase.js":"11","/home/jyotirmaya/Projects/firebase-auth/src/app/schemas.js":"12"},{"size":644,"mtime":1611390329495,"results":"13","hashOfConfig":"14"},{"size":5141,"mtime":1611390329495,"results":"15","hashOfConfig":"14"},{"size":1458,"mtime":1611493123737,"results":"16","hashOfConfig":"14"},{"size":284,"mtime":1611402405907,"results":"17","hashOfConfig":"14"},{"size":1626,"mtime":1611390329495,"results":"18","hashOfConfig":"14"},{"size":1551,"mtime":1611390329495,"results":"19","hashOfConfig":"14"},{"size":764,"mtime":1611492821561,"results":"20","hashOfConfig":"14"},{"size":819,"mtime":1611493111937,"results":"21","hashOfConfig":"14"},{"size":3504,"mtime":1611489892692,"results":"22","hashOfConfig":"14"},{"size":4252,"mtime":1611489287066,"results":"23","hashOfConfig":"14"},{"size":2636,"mtime":1611491691275,"results":"24","hashOfConfig":"14"},{"size":183,"mtime":1611479755601,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"3p5iyj",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/jyotirmaya/Projects/firebase-auth/src/index.js",[],["53","54"],"/home/jyotirmaya/Projects/firebase-auth/src/serviceWorker.js",[],"/home/jyotirmaya/Projects/firebase-auth/src/App.js",["55","56","57"],"/home/jyotirmaya/Projects/firebase-auth/src/app/store.js",[],"/home/jyotirmaya/Projects/firebase-auth/src/features/counter/Counter.js",[],"/home/jyotirmaya/Projects/firebase-auth/src/features/counter/counterSlice.js",[],"/home/jyotirmaya/Projects/firebase-auth/src/features/auth/authSlice.js",[],"/home/jyotirmaya/Projects/firebase-auth/src/features/dash/Dashboard.js",["58","59"],"/home/jyotirmaya/Projects/firebase-auth/src/features/auth/login/Login.js",["60","61"],"import { Field, Form, Formik } from 'formik';\nimport React, { useEffect, useRef } from 'react';\nimport * as Yup from 'yup';\nimport firebase from 'firebase';\n\nimport './Login.scss';\nimport {addUserRecord, Ui, loginUser} from '../../../app/firebase';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { CircularProgress } from '@material-ui/core';\n\nconst Login = (props) => {\n    const history = useHistory();\n    \n    useEffect(() => {\n        Ui.start('#firebaseui', {\n            signInOptions: [\n                firebase.auth.GoogleAuthProvider.PROVIDER_ID\n            ],\n            signInFlow: 'popup',\n            signInSuccessUrl: '/',\n            callbacks: {\n                signInSuccessWithAuthResult: (result) => {\n                    console.log(result);\n                    if(result.additionalUserInfo.isNewUser) {\n                        addUserRecord(result.additionalUserInfo.profile.name, result.additionalUserInfo.profile.email);\n                    }\n                    return true;\n                }\n            }\n        })\n    })\n    return (\n        <React.Fragment>\n            <section className=\"component-section\">\n                <h2>Login</h2>\n                <hr />\n                <Formik\n                    initialValues={{\n                        email: '',\n                        password: ''\n                    }}\n                    validationSchema={Yup.object().shape({\n                        email: Yup.string().email('Provide a valid email!').required('Provide an email!'),\n                        password: Yup.string().required('Provide a password!')\n                    })}\n                    onSubmit={(values, actions) => {\n                        loginUser(values.email, values.password, () => {\n                            history.push('/');\n                        });\n                    }}\n                >\n                    {({errors, touched, isSubmitting}) => (\n                        <Form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"login-email\">Email</label>\n                                <Field id=\"login-email\" name=\"email\" type=\"text\" className=\"field\"/>\n                                {touched.email && errors.email && <div className=\"field-error\">{errors.email}</div>}\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"login-password\">Password</label>\n                                <Field id=\"login-password\" name=\"password\" type=\"password\" className=\"field\"/>\n                                {touched.password && errors.password && <div className=\"field-error\">{errors.password}</div>}\n                            </div>\n                            <div className=\"form-group\">\n                                {!isSubmitting ?\n                                    <button type=\"submit\" className=\"control btn\">Login</button> :\n                                    <CircularProgress />\n                                }\n                            </div>\n                            <p className=\"base-message\">Not a member? <Link to=\"/signup\">Signup</Link></p>\n                            <p style={{textAlign: 'center'}}>OR</p>\n                        </Form>\n                    )}\n                </Formik>\n                <div className=\"firebaseui\" id=\"firebaseui\"></div>\n            </section>\n        </React.Fragment>\n    )\n}\n\nexport default Login;","/home/jyotirmaya/Projects/firebase-auth/src/features/auth/signup/Signup.js",[],"/home/jyotirmaya/Projects/firebase-auth/src/app/firebase.js",["62"],"import firebase from 'firebase';\nimport * as firebaseui from 'firebaseui';\nimport { createUserObject } from './schemas';\n\nconst firebaseConfig = {\n    apiKey: window.env.API_KEY,\n    authDomain: window.env.AUTH_DOMAIN,\n    databaseURL: window.env.DB_URL,\n    projectId: window.env.PROJECT_ID,\n    storageBucket: window.env.STORAGE_BUCKET,\n    messagingSenderId: window.env.MESSAGING_SENDER_ID,\n    appId: window.env.APP_ID\n}\n\nconst Firebase = firebase.initializeApp(firebaseConfig);\nFirebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\nexport default Firebase;\n// console.log(firebase.database.name);\nconst Ui = new firebaseui.auth.AuthUI(Firebase.auth());\n\nconst createUser = (name, email, password, onSuccess = undefined, onFail = undefined) => {\n    Firebase.auth().createUserWithEmailAndPassword(email, password).then((value) => {\n        console.log(value);\n        // addUserRecord(name, value.user.email);\n        Firebase.auth().currentUser.updateProfile({\n            displayName: name,\n        }).then(() => {\n            console.log('Name Added');\n        })\n        onSuccess();\n    }, (reason) => {\n        console.log(reason);\n        onFail(reason);\n    })\n    .catch(err => console.log(err));\n    console.log('adding name')\n    \n}\n\nconst addUserRecord = (name, email) => {\n    console.log(Firebase.database.name);\n    console.log('Adding User Record');\n    let user = createUserObject(name, email);\n    console.log(user);\n    Firebase.database().ref('users').push().set(user, (res) => {\n        console.log(res);\n    }).then((value) => {\n        console.log(value);\n    });\n}\n\nconst loginUser = (email, password, onSuccess = undefined, onFail = undefined) => {\n    Firebase.auth().signInWithEmailAndPassword(email, password).then((value) => {\n        console.log(value);\n        onSuccess && onSuccess();\n    }, (reason) => {\n        console.log(reason);\n        onFail && onFail();\n    })\n}\n\nconst logoutUser = () => {\n    Firebase.auth().signOut();\n}\n\nconst checkAuth = () => {\n    return Firebase.auth().currentUser;\n}\n\nexport {createUser, addUserRecord, Ui, loginUser, checkAuth};\n// const updateUserRecord = (userId, name, isAdmin) => {\n//     let updates = {}\n//     updates['/users/'+userId+'/name'] = name; \n//     updates['/users/'+userId+'/isAdmin'] = isAdmin; \n\n//     Firebase.database().ref().update(updates, (res) => {\n//         console.log(res);\n//     });\n// }\n\n// const makeUserAdmin = (userId) => {\n//     let update = {};\n//     update['/users/' + userId + '/isAdmin'] = true;\n\n//     Firebase.database().ref().update(update, (res) => {\n//         console.log(res);\n//     });\n// }","/home/jyotirmaya/Projects/firebase-auth/src/app/schemas.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":11},{"ruleId":"67","severity":1,"message":"71","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":12},{"ruleId":"67","severity":1,"message":"72","line":8,"column":10,"nodeType":"69","messageId":"70","endLine":8,"endColumn":17},{"ruleId":"67","severity":1,"message":"73","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":37},{"ruleId":"67","severity":1,"message":"74","line":1,"column":39,"nodeType":"69","messageId":"70","endLine":1,"endColumn":43},{"ruleId":"67","severity":1,"message":"75","line":2,"column":28,"nodeType":"69","messageId":"70","endLine":2,"endColumn":34},{"ruleId":"67","severity":1,"message":"76","line":8,"column":16,"nodeType":"69","messageId":"70","endLine":8,"endColumn":24},{"ruleId":"67","severity":1,"message":"77","line":62,"column":7,"nodeType":"69","messageId":"70","endLine":62,"endColumn":17},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'env' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Counter' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'useRef' is defined but never used.","'Redirect' is defined but never used.","'logoutUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]